SAEs_byArm < - ggplot(data = merged, aes(x = Treatment_Arm_Code, fill = Treatment_Arm_Code)) +
geom_bar() + scale_fill_discrete(name = "Treatment Arm",
labels = c("Tofa 5mg BID", "Tofa 10mg BID", "Etanercept/Humira"))
SAEs_byArm < - ggplot(data = SAEs, aes(x = Treatment_Arm_Code, fill = Treatment_Arm_Code)) +
geom_bar() + scale_fill_discrete(name = "Treatment Arm",
labels = c("Tofa 5mg BID", "Tofa 10mg BID", "Etanercept/Humira"))
SAE_byArm
SAEs_byArm
SAEs_byArm < - ggplot(data = SAEs, aes(x = Treatment_Arm_Code, fill = Treatment_Arm_Code)) +
geom_bar() + scale_fill_discrete(name = "Treatment Arm",
labels = c("Tofa 5mg BID", "Tofa 10mg BID", "Etanercept/Humira"))
Plot_SAEs < - ggplot(data = SAEs, aes(x = Treatment_Arm_Code, fill = Treatment_Arm_Code)) +
geom_bar() + scale_fill_discrete(name = "Treatment Arm",
labels = c("Tofa 5mg BID", "Tofa 10mg BID", "Etanercept/Humira"))
View(SAEs)
View(SAEs)
## PLOT #2
merged <- rename(merged, SAE = `AESER ~ Seriousness of AE`)
## PLOT #2
merged <- rename(merged, SAE = `AESER ~ Seriousness of AE`)
SAEs <- merged %>% filter(SAE == "Yes")
Plot_SAEs < - ggplot(data = SAEs, aes(x = Treatment_Arm_Code, fill = Treatment_Arm_Code)) +
geom_bar() + scale_fill_discrete(name = "Treatment Arm",
labels = c("Tofa 5mg BID", "Tofa 10mg BID", "Etanercept/Humira"))
Plot < - ggplot(data = SAEs, aes(x = Treatment_Arm_Code, fill = Treatment_Arm_Code)) +
geom_bar() + scale_fill_discrete(name = "Treatment Arm",
labels = c("Tofa 5mg BID", "Tofa 10mg BID", "Etanercept/Humira"))
SAEs_byArm < - ggplot(data = SAEs, aes(x = Treatment_Arm_Code, fill = Treatment_Arm_Code)) +
geom_bar() + scale_fill_discrete(name = "Treatment Arm",
labels = c("Tofa 5mg BID", "Tofa 10mg BID", "Etanercept/Humira"))
All_AEs <- read_csv("Datasets to try/ICON/AE Report - with all CRF data - Pre_processed.csv",
col_types = cols(`AESER ~ Seriousness of AE` = col_factor(levels = c("N/A", "No", "Yes"))) )
Tx_arms_all_pts <- read_csv("Datasets to try/ICON/A3921133 - Randomization Report - All sites.csv",
col_types = cols(Treatment_Arm_Code = col_factor(levels = c("A","B", "C", "SCREENING"))) )
Tx_arms_all_pts <- rename(Tx_arms_all_pts, SubjectNr = SSID)
All_AEs <- rename(All_AEs, SubjectNr = `Subject_#`)
merged <- left_join(All_AEs, Tx_arms_all_pts, by = "SubjectNr")
## PLOT #1
AEs_byArm <- ggplot(data = merged, aes(x = Treatment_Arm_Code, fill = Treatment_Arm_Code)) +
geom_bar() + scale_fill_discrete(name = "Treatment Arm",
labels = c("Tofa 5mg BID", "Tofa 10mg BID", "Etanercept/Humira"))
AEs_byArm
## PLOT #2
merged <- rename(merged, SAE = `AESER ~ Seriousness of AE`)
SAEs <- merged %>% filter(SAE == "Yes")
SAEs_byArm < - ggplot(data = SAEs, aes(x = Treatment_Arm_Code, fill = Treatment_Arm_Code)) +
geom_bar() + scale_fill_discrete(name = "Treatment Arm",
labels = c("Tofa 5mg BID", "Tofa 10mg BID", "Etanercept/Humira"))
SAE <- merged %>% filter(SAE == "Yes")
View(SAE)
SAEs_byArm < - ggplot(data = SAE, aes(x = Treatment_Arm_Code, fill = Treatment_Arm_Code)) +
geom_bar() + scale_fill_discrete(name = "Treatment Arm",
labels = c("Tofa 5mg BID", "Tofa 10mg BID", "Etanercept/Humira"))
saes <- ggplot(data = SAEs, aes(x = Treatment_Arm_Code, fill = Treatment_Arm_Code)) + geom_bar()
saes
Plot_SAEs <- ggplot(data = SAEs, aes(x = Treatment_Arm_Code, fill = Treatment_Arm_Code)) + geom_bar()
Plot_SAEs + scale_fill_discrete(name = "Treatment Arm", labels = c("Tofa 5mg BID", "Tofa 10mg BID", "Etanercept/Humira"))
rm(saes)
rm(SAE)
View(merged)
merged$`Age at Randomization Years` <- as.factor(merged$`Age at Randomization Years`)
class(merged$`Age at Randomization Years`)
table(merged$`Age at Randomization Years`)
merged$`Age at Randomization Years` <- as.numeric(merged$`Age at Randomization Years`)
merged$Gender <- as.factor(merged$Gender)
table(merged$Gender)
merged <- rename(merged, Age = `Age at Randomization Years`)
AEs_byAge <- ggplot(data = merged, aes(x = Age)) + geom_bar()
AEs_byAge
library(tidyverse)
library(reshape2)
All_AEs <- read_csv("Datasets to try/ICON/AE Report - with all CRF data - Pre_processed.csv",
col_types = cols(`AESER ~ Seriousness of AE` = col_factor(levels = c("N/A", "No", "Yes"))) )
Tx_arms_all_pts <- read_csv("Datasets to try/ICON/A3921133 - Randomization Report - All sites.csv",
col_types = cols(Treatment_Arm_Code = col_factor(levels = c("A","B", "C", "SCREENING"))) )
Tx_arms_all_pts <- rename(Tx_arms_all_pts, SubjectNr = SSID)
All_AEs <- rename(All_AEs, SubjectNr = `Subject_#`)
merged <- left_join(All_AEs, Tx_arms_all_pts, by = "SubjectNr")
## PLOT #1  ###  AEs by Tx arm ######
AEs_byArm <- ggplot(data = merged, aes(x = Treatment_Arm_Code, fill = Treatment_Arm_Code)) +
geom_bar() + scale_fill_discrete(name = "Treatment Arm",
labels = c("Tofa 5mg BID", "Tofa 10mg BID", "Etanercept/Humira"))
AEs_byArm
## PLOT #2  -- SAEs by Tx arm  #########
merged <- rename(merged, SAE = `AESER ~ Seriousness of AE`)
SAEs <- merged %>% filter(SAE == "Yes")
Plot_SAEs <- ggplot(data = SAEs, aes(x = Treatment_Arm_Code, fill = Treatment_Arm_Code)) + geom_bar()
Plot_SAEs + scale_fill_discrete(name = "Treatment Arm", labels = c("Tofa 5mg BID", "Tofa 10mg BID", "Etanercept/Humira"))
Plot #3   ---  AEs by AGE
## Plot #3   ---  AEs by AGE
merged$Gender <- as.factor(merged$Gender)
merged <- rename(merged, Age = `Age at Randomization Years`)
AEs_byAge <- ggplot(data = merged, aes(x = Age)) + geom_bar()
AEs_byAge
All_AEs <- read_csv("Datasets to try/ICON/AE Report - with all CRF data - Pre_processed.csv",
col_types = cols(`AESER ~ Seriousness of AE` = col_factor(levels = c("N/A", "No", "Yes"))) )
Tx_arms_all_pts <- read_csv("Datasets to try/ICON/A3921133 - Randomization Report - All sites.csv",
col_types = cols(Treatment_Arm_Code = col_factor(levels = c("A","B", "C", "SCREENING"))) )
Tx_arms_all_pts <- rename(Tx_arms_all_pts, SubjectNr = SSID)
All_AEs <- rename(All_AEs, SubjectNr = `Subject_#`)
merged <- left_join(All_AEs, Tx_arms_all_pts, by = "SubjectNr")
## PLOT #1  ###  AEs by Tx arm ######
AEs_byArm <- ggplot(data = merged, aes(x = Treatment_Arm_Code, fill = Treatment_Arm_Code)) +
geom_bar() + scale_fill_discrete(name = "Treatment Arm",
labels = c("Tofa 5mg BID", "Tofa 10mg BID", "Etanercept/Humira")) +
ylab("# of AEs")
AEs_byArm
## PLOT #2  -- SAEs by Tx arm  #########
merged <- rename(merged, SAE = `AESER ~ Seriousness of AE`)
SAEs <- merged %>% filter(SAE == "Yes")
Plot_SAEs <- ggplot(data = SAEs, aes(x = Treatment_Arm_Code, fill = Treatment_Arm_Code)) + geom_bar() +
ylab("SAEs")
Plot_SAEs + scale_fill_discrete(name = "Treatment Arm", labels = c("Tofa 5mg BID", "Tofa 10mg BID", "Etanercept/Humira"))
## Plot #3   ---  AEs by AGE
merged$Gender <- as.factor(merged$Gender)
merged <- rename(merged, Age = `Age at Randomization Years`)
AEs_byAge <- ggplot(data = merged, aes(x = Age)) + geom_bar() + ylab("Count of # AEs")
AEs_byAge
SAEs_byAge <- ggplot(data = SAEs, aes(x = Age)) + geom_bar() + ylab("# SAEs")
SAEs_byAge
SAEs <- rename(SAEs, Age = `Age at Randomization Years`)
SAEs_byAge <- ggplot(data = SAEs, aes(x = Age)) + geom_bar() + ylab("# SAEs")
SAEs_byAge
shiny::runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny/graphApp')
install.packages("Hmisc")
install.packages("Hmisc")
library(Hmisc)
shiny::runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny/graphApp')
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny/inputApp')
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny/inputApp')
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny/markupApp')
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny/testApp')
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny2/testApp')
x <- NULL
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny2/testApp')
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny2/testApp')
y == 0
y <- 0
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny2/testApp')
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny2/testApp2')
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny2/testApp2')
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny2/testApp3')
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny2/testApp3')
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny2/testApp3')
output$text3 <- renderText({
##First example
input$goButton
isolate(paste(input$text1, input$text2))
##Another example, uncomment to see
##if (input$goButton == 0) "You have not pressed the button"
##else if (input$goButton == 1) "you pressed it once"
##else "OK quit pressing it"
})
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny2/testApp3')
shiny::runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny2/testApp3')
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny/inputApp')
runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-')
runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-')
shinyApp(ui_Visit_Calculator, server)
runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-')
data("mtcars")
View(mtcars)
valiant <- mtcars %>% filter
library(tidyverse)
valiant <- mtcars %>% filter(cyl > 4)
View(valiant)
library(ggplot2)
library(ISLR)
? ISLR
??ISLR
data(ISLR)
data()
data("USAccDeaths")
USAccDeaths
data("Titanic")
Titanic
data("USArrests")
View(USArrests)
Titanic
Titanic <- as.data.frame(Titanic)
View(Titanic)
levels(Titanic$Class)
shiny::runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Titanic_plot')
runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Titanic_plot')
clase <- character(levels(Titanic$Class))
runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Titanic_plot')
Titanic <- as.data.frame(Titanic)
runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Titanic_plot')
Titanic_subset <- Titanic %>% filter(Class == "input$PassengerClass"1st")
Titanic_subset <- Titanic %>% filter(Class == "1st")
runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Titanic_plot')
Titanic_subset <- Titanic %>% filter(Class == input$PassengerClass)
ploteo <- ggplot(data = Titanic, aes(x = Freq, fill = c(Age, Survived)) +
geom_bar()
)
ploteo <- ggplot(data = Titanic, aes(x = Freq, fill = c(Age, Survived)) +
geom_bar() )
ploteo <- ggplot(data = Titanic, aes(x = Freq, fill = Survived) +
geom_bar() )
ploteo <- ggplot(Titanic, aes(x = Freq, color = Survived)) + geom_bar()
Titanic <- as.data.frame(Titanic)
ploteo <- ggplot(Titanic, aes(x = Freq, color = Survived)) + geom_bar()
ploteo <- ggplot(Titanic, aes(x = Freq, color = c(Age, Survived) ) ) + geom_bar()
ploteo
ploteo <- ggplot(Titanic, aes(x = Freq, color = Survived ) ) + geom_bar()
ploteo
ploteo <- ggplot(Titanic, aes(x = Class, y = Freq, color = Survived ) ) + geom_bar()
ploteo
ploteo <- ggplot(Titanic, aes(x = Class, y = Freq, color = Survived ) ) + geom_bar(stat = "identity")
ploteo
ploteo <- ggplot(Titanic, aes(x = Class, y = Freq, color = Survived ) ) + geom_bar(stat = "identity", position_dodge())
ploteo <- ggplot(Titanic, aes(x = Class, y = Freq, color = Survived ) ) + geom_bar(stat = "identity", position = position_dodge() )
ploteo
ploteo <- ggplot(Titanic, aes(x = Class, y = Freq, fill = Survived ) ) + geom_bar(stat = "identity", position = position_dodge() )
ploteo
ploteo
runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Titanic_plot')
runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Data-Products-Assignment-2-Shiny-App/Titanic_plot')
runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Data-Products-Assignment-2-Shiny-App/Titanic_plot')
runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Data-Products-Assignment-2-Shiny-App/Titanic_plot')
runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Data-Products-Assignment-2-Shiny-App/Titanic_plot')
Titanic <- as.data.frame(Titanic)
runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Data-Products-Assignment-2-Shiny-App/Titanic_plot')
runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Data-Products-Assignment-2-Shiny-App/Titanic_plot')
Titanic <- as.data.frame(Titanic)
a <- 1
if (a == 1) {Titanic %>% filter(Sex == "Male")}
if (a == 1) {Titanic <- filter(Sex == "Male")}
runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Data-Products-Assignment-2-Shiny-App/Titanic_plot')
Titanic <- as.data.frame(Titanic)
if (a == 1) {Titanic <- filter(Sex == "Male")}
if (a == 1) {Titanic %>% filter(Sex == "Male")}
if (a == 1) {Titanic <- Titanic %>% filter(Sex == "Male")}
runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Data-Products-Assignment-2-Shiny-App/Titanic_plot')
Titanic
Titanic <- as.data.frame(Titanic)
Titanic %>% group_by(Class) %>% summarise(n())
Titanic %>% group_by(Class) %>% summarise(n(Freq))
Titanic %>% group_by(Class) %>% sum(Freq)
sum(Titanic$Freq)
Titanic %>% group_by(Class) %>% summarise(Freq)
Titanic %>% group_by(Class) %>% summarise(count(Freq))
Titanic %>% group_by(Class) %>% count(Freq)
table(Titanic$Class, Titanic$Freq)
Titanic %>% group_by(Class) %>% summarise(sum(Freq))
runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Data-Products-Assignment-2-Shiny-App/Titanic_plot')
ibrary(tidyverse)
library(shiny)
data("Titanic")
Titanic <- as.data.frame(Titanic)
Titanic_subset <- Titanic %>% filter(Class == "1st")
a <- "1"
if (a == "0") {Titanic_subset <- Titanic_subset %>% filter(Sex == "Male")}
if (a == "1") {Titanic_subset <- Titanic_subset %>% filter(Sex == "Female")}
else {Titanic_subset <- Titanic_subset}
runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Data-Products-Assignment-2-Shiny-App/Titanic_plot')
data("Titanic")
Titanic <- as.data.frame(Titanic)
Titanic_subset <- Titanic %>% filter(Class == "1st")
a <- "2"
if (a == "0") {Titanic_subset <- Titanic_subset %>% filter(Sex == "Male")}
if (a == "1") {Titanic_subset <- Titanic_subset %>% filter(Sex == "Female")}
if (a == "2") {Titanic_subset <- Titanic_subset}
a <- "0"
if (a == "0") {Titanic_subset <- Titanic_subset %>% filter(Sex == "Male")}
if (a == "1") {Titanic_subset <- Titanic_subset %>% filter(Sex == "Female")}
if (a == "2") {Titanic_subset <- Titanic_subset}
Titanic <- as.data.frame(Titanic)
Titanic_subset <- Titanic %>% filter(Class == "1st")
a <- "1"
if (a == "0") {Titanic_subset <- Titanic_subset %>% filter(Sex == "Male")}
if (a == "1") {Titanic_subset <- Titanic_subset %>% filter(Sex == "Female")}
if (a == "2") {Titanic_subset <- Titanic_subset}
View(Titanic_subset)
Titanic %>% group_by(Class) %>% summarise(sum(Freq))
elseif
else
else
runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Data-Products-Assignment-2-Shiny-App/Titanic_plot')
runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Data-Products-Assignment-2-Shiny-App/Titanic_plot')
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny/graphApp')
runApp('~/R_files/DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny/testApp')
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny2/testApp')
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny2/testApp2')
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny2/testApp2')
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny2/testApp2')
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny2/testApp')
x <<- x + 1
x <- 0
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny2/testApp')
runApp('DS SPECIALIZATION - Course Material GitHub/courses/09_DevelopingDataProducts/shiny2/testApp3')
library(readxl)
SDR_SDV_Tracker_ALL_SITES_OVERALL_ <- read_excel("C:/Users/Thruinin/Downloads/SDR_SDV Tracker - ALL SITES (OVERALL).xls")
View(SDR_SDV_Tracker_ALL_SITES_OVERALL_)
library(readxl)
EOS_Subject_Tracking <- read_excel("C:/Users/Thruinin/Downloads/A3921133 EOS Subject Tracking LATAM_2Apr2020_TM_Excel 97.xls")
View(EOS_Subject_Tracking)
library(tidyverse)
test <- left_join(SDR_SDV_Tracker_ALL_SITES_OVERALL_, EOS_Subject_Tracking, by = "SSID")
View(test)
merged <- left_join(SDR_SDV_Tracker_ALL_SITES_OVERALL_, EOS_Subject_Tracking, by = "SSID")
getwd()
merged <- left_join(SDR_SDV_Tracker_ALL_SITES_OVERALL_, EOS_Subject_Tracking, by = "SSID")
write_csv("merged EOS tracker.csv")
library(readxl)
library(xlsx)
write.xlsx("merged EOS tracker")
write.xlsx(merged, "Merged EOS tracker")
write.xlsx(merged, "Merged EOS tracker.xlsx")
shiny::runApp('Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Data-Products-Assignment-2-Shiny-App/Titanic_plot')
install.packages("devtools")
install.packages("devtools")
install.packages("rsconnect")
library(rsconnect)
library(devtools)
library(shiny)
rsconnect::setAccountInfo(name='thruinin', token='4A59629D1F8935FE90268B3AFB099DF3', secret='j6Bqb+e2JhljDkjLQeuehGEGKqbylCxjJ6UO3QjJ')
setwd("~/R_files/Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Data-Products-Assignment-2-Shiny-App/Titanic_plot")
deployApp("Titanic Survivors")
getwd()
deployApp(appName = "Titanic Survivors")
deployApp(appName = "Titanic_Survivors")
install.packages("shinythemes")
runApp()
runApp()
exists(Titanic)
runApp()
runApp()
runApp()
runApp('app (with ALL CLASES Included).R')
runApp('app (with ALL CLASES Included).R')
input <- "All"
data("Titanic")
Titanic <- as.data.frame(Titanic)
input <- "All"
ifelse(input =="All", Titanic_subset <- Titanic %>% filter(Class == input$PassengerClass),
Titanic <- Titanic)
if (input$Sex == "Male") {Titanic_subset <- Titanic_subset %>% filter(Sex == "Male")}
if (input$Sex == "Female") {Titanic_subset <- Titanic_subset %>% filter(Sex == "Female")}
if (input$Sex == "Both") {Titanic_subset <- Titanic_subset}
ploteo <- ggplot(Titanic_subset, aes(x = Class, y = Freq, fill = Survived ) ) +
geom_bar(stat = "identity", position = position_dodge() ) +
ylab("Number of passengers")
ploteo
ifelse (input =="All", Titanic <- Titanic,
Titanic_subset <- Titanic %>% filter(Class == input$PassengerClass)
)
data("Titanic")
Titanic <- as.data.frame(Titanic)
input <- "All"
ifelse (input =="All", Titanic <- Titanic,
Titanic_subset <- Titanic %>% filter(Class == input$PassengerClass)
)
data("Titanic")
Titanic <- as.data.frame(Titanic)
input <- "1st"
ifelse (input =="All", Titanic <- Titanic,
Titanic_subset <- Titanic %>% filter(input)
)
data("Titanic")
Titanic <- as.data.frame(Titanic)
input <- "1st"
ifelse (input =="All", Titanic <- Titanic,
Titanic_subset <- Titanic %>% filter(Class == input)
)
if (input$Sex == "Male") {Titanic_subset <- Titanic_subset %>% filter(Sex == "Male")}
if (input$Sex == "Female") {Titanic_subset <- Titanic_subset %>% filter(Sex == "Female")}
if (input$Sex == "Both") {Titanic_subset <- Titanic_subset}
ploteo <- ggplot(Titanic_subset, aes(x = Class, y = Freq, fill = Survived ) ) +
geom_bar(stat = "identity", position = position_dodge() ) +
ylab("Number of passengers")
ploteo
input <- "All"
ifelse (input =="All", Titanic <- Titanic,
Titanic_subset <- Titanic %>% filter(Class == input)
)
if (input$Sex == "Male") {Titanic_subset <- Titanic_subset %>% filter(Sex == "Male")}
if (input$Sex == "Female") {Titanic_subset <- Titanic_subset %>% filter(Sex == "Female")}
if (input$Sex == "Both") {Titanic_subset <- Titanic_subset}
ploteo <- ggplot(Titanic_subset, aes(x = Class, y = Freq, fill = Survived ) ) +
geom_bar(stat = "identity", position = position_dodge() ) +
ylab("Number of passengers")
ploteo
data("Titanic")
Titanic <- as.data.frame(Titanic)
input <- "All"
ifelse (input =="All", Titanic_subset <- Titanic,
Titanic_subset <- Titanic %>% filter(Class == input)
)
if (input$Sex == "Male") {Titanic_subset <- Titanic_subset %>% filter(Sex == "Male")}
if (input$Sex == "Female") {Titanic_subset <- Titanic_subset %>% filter(Sex == "Female")}
if (input$Sex == "Both") {Titanic_subset <- Titanic_subset}
ploteo <- ggplot(Titanic_subset, aes(x = Class, y = Freq, fill = Survived ) ) +
geom_bar(stat = "identity", position = position_dodge() ) +
ylab("Number of passengers")
ploteo
runApp('app (with ALL CLASES Included).R')
runApp('app (with ALL CLASES Included).R')
View(Titanic_subset)
Titanic_subset %>% summarise(count(Freq))
Titanic_subset %>% summarise(count(Freq))
Titanic_subset %>% summarise(sum(Freq))
runApp('app (with ALL CLASES Included).R')
runApp('app (with ALL CLASES Included).R')
runApp('app (with ALL CLASES Included).R')
runApp('app (with ALL CLASES Included).R')
runApp('app (with ALL CLASES Included).R')
runApp('app (with ALL CLASES Included).R')
View(Titanic_subset)
---
title: "The 'RMS Titanic' Survivors"
author: "Tomás A. Maccor"
date: "15/4/2020"
output:
slidy_presentation:
theme: readable
ioslides_presentation: default
beamer_presentation: default
---
runApp('app (with ALL CLASES Included).R')
inputPassenger <- "2nd"
inputSex <- "All"
######################################################
ifelse (inputPassenger =="All", Titanic_subset <- Titanic,
Titanic_subset <- Titanic %>% filter(Class == inputPassenger)
)
inputPassenger <- "2nd"
inputSex <- "All"
ifelse (inputPassenger =="All", Titanic_subset <- Titanic,
Titanic_subset <- Titanic %>% filter(Class == inputPassenger)
)
data("Titanic")
Titanic <- as.data.frame(Titanic)
library(shiny)
library(shinythemes)
library(dplyr, quietly = TRUE , warn.conflicts = FALSE)
library(ggplot2, quietly = TRUE)
library(readr, quietly = TRUE)
data("Titanic")
Titanic <- as.data.frame(Titanic)
a <- Titanic
knitr::kable(head(a), align = c("l") )
library(shiny)
library(shinythemes)
library(dplyr, quietly = TRUE , warn.conflicts = FALSE)
library(ggplot2, quietly = TRUE)
library(readr, quietly = TRUE)
data("Titanic")
Titanic <- as.data.frame(Titanic)
a <- Titanic
knitr::kable(head(a), align = c("l") )
inputPassenger <- "2nd"
inputSex <- "All"
######################################################
ifelse (inputPassenger =="All", Titanic_subset <- Titanic,
Titanic_subset <- Titanic %>% filter(Class == inputPassenger)
)
if (inputSex == "Male") {Titanic_subset <- Titanic_subset %>% filter(Sex == "Male")}
if (inputSex == "Female") {Titanic_subset <- Titanic_subset %>% filter(Sex == "Female")}
if (inputSex == "Both") {Titanic_subset <- Titanic_subset}
ploteo <- ggplot(Titanic_subset, aes(x = Class, y = Freq, fill = Survived ) ) +
geom_bar(stat = "identity", position = position_dodge() ) +
ylab("Number of passengers")
ploteo
View(Titanic)
inputPassenger <- "2nd"
inputSex <- "Male"
ifelse (inputPassenger =="All", Titanic_subset <- Titanic,
Titanic_subset <- filter(Titanic, Class == inputPassenger)
)
data("Titanic")
Titanic <- as.data.frame(Titanic)
inputPassenger <- "2nd"
inputSex <- "Male"
ifelse (inputPassenger =="All", Titanic_subset <- Titanic,
Titanic_subset <- filter(Titanic, Class == inputPassenger)
)
if (inputSex == "Male") {Titanic_subset <- Titanic_subset %>% filter(Sex == "Male")}
if (inputSex == "Female") {Titanic_subset <- Titanic_subset %>% filter(Sex == "Female")}
if (inputSex == "Both") {Titanic_subset <- Titanic_subset}
ploteo <- ggplot(Titanic_subset, aes(x = Class, y = Freq, fill = Survived ) ) +
geom_bar(stat = "identity", position = position_dodge() ) +
ylab("Number of passengers")
ploteo
data("Titanic")
Titanic <- as.data.frame(Titanic)
inputPassenger <- "2nd"
inputSex <- "All"
ifelse (inputPassenger =="All", Titanic_subset <- Titanic,
Titanic_subset <- filter(Titanic, Class == inputPassenger)
)
Titanic_subset <- filter(Titanic, Class == inputPassenger)
inputPassenger =="All"
Titanic_subset <- Titanic
inputPassenger <- "All"
inputPassenger =="All"
Titanic_subset <- filter(Titanic, Class == inputPassenger)
runApp('app (with ALL CLASES Included).R')
runApp('app (with ALL CLASES Included).R')
deployApp(appName = "Titanic_Survivors")
library
library(devtools)
library(rsconnect)
deployApp(appName = "Titanic_Survivors")
deployApp(appName = "RMS_Titanic_Survivors")
runApp('app (with ALL CLASES Included).R')
runApp('~/R_files/Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Data-Products-Assignment-2-Shiny-App/app (with ALL CLASES Included).R')
deployApp(appName = "RMS_Titanic_Survivors")
runApp('~/R_files/Course_9_Developing Data Products/Assignments/Assignment #2/ML---Assignment--2--Shiny-App-/Data-Products-Assignment-2-Shiny-App/app (with ALL CLASES Included).R')
deployApp(appName = "Titanic")
deployApp(appName = "Titanic")
deployApp(appName = "Exploring_Titanic_Survivors")
